/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIpackage;

import controllerpackage.Controller;
import entityClassesPackage.MemberDetailsTable;
import entityClassesPackage.ProjectDetailsTable;
import entityClassesPackage.TeamLoginTable;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.internet.InternetAddress;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author erwin
 */
public class AdminGUI extends javax.swing.JFrame {

    private final String expression = "(\\d{3})(\\[-])(\\d{4})$";
    private List<MemberDetailsTable> memberDetails;
    private List<ProjectDetailsTable> projectDetails;
    private List<TeamLoginTable> teamDetails;
    private List<MemberDetailsTable> moreMemberDetails;
    private JLabel firstName, lastName, phoneNumber, emailId, teamName, memberRole;
    private JLabel projectName, projectDesc, projectStartDate, projectEndDate, projectStatus, projectOutcome;
    /**
     * Creates new form AdminGUI
     */
    private Controller controller;

    public AdminGUI() {
        initComponents();
        controller = new Controller();
        bCreateLogin.setEnabled(true);
        teamName = new JLabel();
        firstName = new JLabel();
        lastName = new JLabel();
        phoneNumber = new JLabel();
        emailId = new JLabel();
        memberRole = new JLabel();
        projectName = new JLabel();
        projectDesc = new JLabel();
        projectStartDate = new JLabel();
        projectEndDate = new JLabel();
        projectStatus = new JLabel();
        projectOutcome = new JLabel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pAdminBanner = new javax.swing.JPanel();
        lAdminBanner = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pCreateMembers = new javax.swing.JPanel();
        lMemberFirstName = new javax.swing.JLabel();
        tfMemberFirstName = new javax.swing.JTextField();
        tfMemberLastName = new javax.swing.JTextField();
        lMemberLastName = new javax.swing.JLabel();
        lMemberEmail = new javax.swing.JLabel();
        tfMemberEmail = new javax.swing.JTextField();
        tfPhoneNumber = new javax.swing.JTextField();
        lPhoneNumber = new javax.swing.JLabel();
        lRole = new javax.swing.JLabel();
        cbRole = new javax.swing.JComboBox();
        bAddMember = new javax.swing.JButton();
        bClearFields = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pCreateTeam = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lTeamName = new javax.swing.JLabel();
        tfTeamName = new javax.swing.JTextField();
        tfTeamUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfTeamPassword = new javax.swing.JTextField();
        cbLoginRole = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        bCreateLogin = new javax.swing.JButton();
        pProjectMembersList = new javax.swing.JPanel();
        bViewAllTeams = new javax.swing.JButton();
        bViewAllMembers = new javax.swing.JButton();
        bAddMemberToTeam = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayMembersTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        displayTeamsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        pQuery = new javax.swing.JPanel();
        lQueryType = new javax.swing.JLabel();
        cbQueryType = new javax.swing.JComboBox();
        bViewDetails = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        displayQueryTable = new javax.swing.JTable();
        pDetails = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pAdminBanner.setBackground(new java.awt.Color(204, 255, 204));
        pAdminBanner.setPreferredSize(new java.awt.Dimension(1248, 86));

        lAdminBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fil-3squares-02.jpg"))); // NOI18N

        javax.swing.GroupLayout pAdminBannerLayout = new javax.swing.GroupLayout(pAdminBanner);
        pAdminBanner.setLayout(pAdminBannerLayout);
        pAdminBannerLayout.setHorizontalGroup(
            pAdminBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAdminBannerLayout.createSequentialGroup()
                .addComponent(lAdminBanner)
                .addGap(0, 548, Short.MAX_VALUE))
        );
        pAdminBannerLayout.setVerticalGroup(
            pAdminBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAdminBannerLayout.createSequentialGroup()
                .addComponent(lAdminBanner)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1248, 800));

        pCreateMembers.setBackground(new java.awt.Color(255, 255, 204));

        lMemberFirstName.setText("Member First Name");

        lMemberLastName.setText("Member Last Name");

        lMemberEmail.setText("Email ID");

        lPhoneNumber.setText("Phone Number");

        lRole.setText("Member Role");

        cbRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Student", "Faculty Advisor", "Manager", "Partner" }));

        bAddMember.setText("Add Member");
        bAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMemberActionPerformed(evt);
            }
        });

        bClearFields.setText("Clear Fields");
        bClearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearFieldsActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");

        javax.swing.GroupLayout pCreateMembersLayout = new javax.swing.GroupLayout(pCreateMembers);
        pCreateMembers.setLayout(pCreateMembersLayout);
        pCreateMembersLayout.setHorizontalGroup(
            pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateMembersLayout.createSequentialGroup()
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pCreateMembersLayout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lRole)
                            .addComponent(lMemberEmail)
                            .addComponent(lMemberFirstName)
                            .addComponent(lMemberLastName)
                            .addComponent(lPhoneNumber))
                        .addGap(56, 56, 56)
                        .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(tfMemberLastName)
                                .addComponent(tfMemberFirstName)
                                .addComponent(tfMemberEmail))
                            .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pCreateMembersLayout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(bAddMember)
                        .addGap(69, 69, 69)
                        .addComponent(bClearFields)))
                .addContainerGap(542, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pCreateMembersLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(332, 332, 332))
        );
        pCreateMembersLayout.setVerticalGroup(
            pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateMembersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(12, 12, 12)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMemberFirstName)
                    .addComponent(tfMemberFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMemberLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lMemberLastName))
                .addGap(18, 18, 18)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMemberEmail)
                    .addComponent(tfMemberEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPhoneNumber))
                .addGap(18, 18, 18)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lRole)
                    .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pCreateMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bClearFields)
                    .addComponent(bAddMember))
                .addContainerGap(420, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Members", pCreateMembers);

        pCreateTeam.setBackground(new java.awt.Color(204, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        lTeamName.setText("Team Name");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        cbLoginRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Team ", "Admin" }));
        cbLoginRole.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbLoginRoleItemStateChanged(evt);
            }
        });

        jLabel4.setText("Login Role");

        bCreateLogin.setText("Create Login");
        bCreateLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCreateLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(lTeamName)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bCreateLogin)
                    .addComponent(tfTeamUsername)
                    .addComponent(tfTeamName)
                    .addComponent(tfTeamPassword)
                    .addComponent(cbLoginRole, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTeamName)
                    .addComponent(tfTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTeamUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfTeamPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbLoginRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(42, 42, 42)
                .addComponent(bCreateLogin)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pProjectMembersList.setBackground(new java.awt.Color(255, 255, 204));

        bViewAllTeams.setText("View All Teams");
        bViewAllTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewAllTeamsActionPerformed(evt);
            }
        });

        bViewAllMembers.setText("View All Members");
        bViewAllMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewAllMembersActionPerformed(evt);
            }
        });

        bAddMemberToTeam.setText("Add Member to Team");
        bAddMemberToTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMemberToTeamActionPerformed(evt);
            }
        });

        displayMembersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(displayMembersTable);

        displayTeamsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(displayTeamsTable);

        javax.swing.GroupLayout pProjectMembersListLayout = new javax.swing.GroupLayout(pProjectMembersList);
        pProjectMembersList.setLayout(pProjectMembersListLayout);
        pProjectMembersListLayout.setHorizontalGroup(
            pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pProjectMembersListLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(bViewAllTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(bViewAllMembers, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProjectMembersListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProjectMembersListLayout.createSequentialGroup()
                        .addComponent(bAddMemberToTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(272, 272, 272))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProjectMembersListLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pProjectMembersListLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(389, Short.MAX_VALUE)))
        );
        pProjectMembersListLayout.setVerticalGroup(
            pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProjectMembersListLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bViewAllTeams)
                    .addComponent(bViewAllMembers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bAddMemberToTeam)
                .addGap(4, 4, 4))
            .addGroup(pProjectMembersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProjectMembersListLayout.createSequentialGroup()
                    .addContainerGap(87, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(46, 46, 46)))
        );

        javax.swing.GroupLayout pCreateTeamLayout = new javax.swing.GroupLayout(pCreateTeam);
        pCreateTeam.setLayout(pCreateTeamLayout);
        pCreateTeamLayout.setHorizontalGroup(
            pCreateTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateTeamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pProjectMembersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        pCreateTeamLayout.setVerticalGroup(
            pCreateTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCreateTeamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCreateTeamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pProjectMembersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Login", pCreateTeam);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(823, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(571, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel2);

        pQuery.setBackground(new java.awt.Color(255, 255, 204));

        lQueryType.setText("Query Type");

        cbQueryType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Team Member's Name", "Project Name" }));
        cbQueryType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbQueryTypeItemStateChanged(evt);
            }
        });
        cbQueryType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbQueryTypeActionPerformed(evt);
            }
        });

        bViewDetails.setText("View Details");
        bViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewDetailsActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        displayQueryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(displayQueryTable);

        pDetails.setBackground(new java.awt.Color(255, 153, 153));

        javax.swing.GroupLayout pDetailsLayout = new javax.swing.GroupLayout(pDetails);
        pDetails.setLayout(pDetailsLayout);
        pDetailsLayout.setHorizontalGroup(
            pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );
        pDetailsLayout.setVerticalGroup(
            pDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pQueryLayout = new javax.swing.GroupLayout(pQuery);
        pQuery.setLayout(pQueryLayout);
        pQueryLayout.setHorizontalGroup(
            pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pQueryLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pQueryLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(pDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pQueryLayout.createSequentialGroup()
                        .addComponent(lQueryType)
                        .addGap(18, 18, 18)
                        .addComponent(cbQueryType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pQueryLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(bViewDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        pQueryLayout.setVerticalGroup(
            pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pQueryLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lQueryType)
                    .addComponent(cbQueryType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bViewDetails)
                    .addComponent(bDelete))
                .addGap(26, 26, 26)
                .addGroup(pQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addContainerGap(250, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Query", pQuery);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pAdminBanner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pAdminBanner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewDetailsActionPerformed
        if (cbQueryType.getSelectedItem().equals("Team Member's Name")) {
            if(displayQueryTable.getSelectedRow()==-1)
                JOptionPane.showMessageDialog(null, "Select a row from the table");
            else{
                String memberEmail = displayQueryTable.getValueAt(displayQueryTable.getSelectedRow(), 2).toString();
                //moreMemberDetails = controller.searchMemberDetail(memberEmail);
                firstName.setText(memberDetails.get(displayQueryTable.getSelectedRow()).getFirstName());
                lastName.setText(memberDetails.get(displayQueryTable.getSelectedRow()).getLastName());
                emailId.setText(memberDetails.get(displayQueryTable.getSelectedRow()).getEmailId());
                phoneNumber.setText((memberDetails.get(displayQueryTable.getSelectedRow()).getPhoneNumber()));
                memberRole.setText((memberDetails.get(displayQueryTable.getSelectedRow()).getMemberRole()));
                System.out.println(phoneNumber.getText());
                pDetails.add(firstName);
                pDetails.add(lastName);
                pDetails.add(emailId);
                pDetails.add(phoneNumber);
                pDetails.add(memberRole);
                //pDetails.add(firstName);
            }
            

        } else if (cbQueryType.getSelectedItem().equals("Project Name")) {
                if(displayQueryTable.getSelectedRow()==-1)
                JOptionPane.showMessageDialog(null, "Select a row from the table");
            else{
                String projectSelected = displayQueryTable.getValueAt(displayQueryTable.getSelectedRow(), 2).toString();
                //moreMemberDetails = controller.searchMemberDetail(memberEmail);
                projectName.setText(projectDetails.get(displayQueryTable.getSelectedRow()).getProjectName());
                projectDesc.setText(projectDetails.get(displayQueryTable.getSelectedRow()).getProjectDescription());
                projectStartDate.setText(projectDetails.get(displayQueryTable.getSelectedRow()).getProjectStartDate());
                projectEndDate.setText((projectDetails.get(displayQueryTable.getSelectedRow()).getProjectEndDate()));
                projectStatus.setText((projectDetails.get(displayQueryTable.getSelectedRow()).getProjectStatus()));
                projectOutcome.setText((projectDetails.get(displayQueryTable.getSelectedRow()).getProjectOutcome()));
                System.out.println(phoneNumber.getText());
                pDetails.add(projectName);
                pDetails.add(projectDesc);
                pDetails.add(projectStartDate);
                pDetails.add(projectEndDate);
                pDetails.add(projectStatus);
                pDetails.add(projectOutcome);
                
                }
        } else {

        }
    }//GEN-LAST:event_bViewDetailsActionPerformed

    private void cbQueryTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbQueryTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbQueryTypeActionPerformed

    private void cbQueryTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbQueryTypeItemStateChanged
        if (cbQueryType.getSelectedItem().equals("Team Member's Name")) {
            memberDetails = controller.retrieveAllMembers();
            String[] columns = {"First Name", "Last Name", "Email ID"};
            DefaultTableModel tableModel = new DefaultTableModel();
            displayQueryTable.setModel(tableModel);

            tableModel.setColumnIdentifiers(columns);
            for (int i = 0; i < memberDetails.size(); i++) {
                Object[] row = {memberDetails.get(i).getFirstName(),
                    memberDetails.get(i).getLastName(),
                    memberDetails.get(i).getEmailId()};

                tableModel.addRow(row);
            }
            displayQueryTable.setBounds(200, 200, 500, 500);
        } else {
            projectDetails = controller.retrieveAllProjects();
            String[] columns = {"Project Name", "Start Date", "End Date", "Status"};
            DefaultTableModel tableModel = new DefaultTableModel();
            displayQueryTable.setModel(tableModel);

            tableModel.setColumnIdentifiers(columns);
            for (int i = 0; i < projectDetails.size(); i++) {
                Object[] row = {projectDetails.get(i).getProjectName(),
                    projectDetails.get(i).getProjectStartDate(),
                    projectDetails.get(i).getProjectEndDate(),
                    projectDetails.get(i).getProjectStatus()};

                tableModel.addRow(row);
            }
            displayQueryTable.setBounds(200, 200, 500, 500);
        }
    }//GEN-LAST:event_cbQueryTypeItemStateChanged

    private void bAddMemberToTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMemberToTeamActionPerformed
        boolean isMemberAdded;
        if(displayMembersTable.getSelectedRow()==-1 || displayTeamsTable.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(null, "Select the team and member to which you want the member");
        } else {
            String memberRowValue = displayMembersTable.getValueAt(displayMembersTable.getSelectedRow(),2).toString();
            System.out.println(memberRowValue);
            String teamRowValue = displayTeamsTable.getValueAt(displayTeamsTable.getSelectedRow(),1).toString();
            System.out.println(teamRowValue);
            isMemberAdded = controller.addMemberToTeam(teamRowValue, memberRowValue);
            if(isMemberAdded == true)
                JOptionPane.showMessageDialog(null, "Member added to team successfully");
            else
                JOptionPane.showMessageDialog(null, "Member already present in a team");
        }
    }//GEN-LAST:event_bAddMemberToTeamActionPerformed

    private void bViewAllMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewAllMembersActionPerformed
        memberDetails = controller.retrieveAllMembers();
        

        String[] columns = {"First Name", "Last Name", "Email ID"};
        DefaultTableModel tableModel = new DefaultTableModel();
        displayMembersTable.setModel(tableModel);

        tableModel.setColumnIdentifiers(columns);
        for (int i = 0; i < memberDetails.size(); i++) {
            Object[] row = {memberDetails.get(i).getFirstName(),
                memberDetails.get(i).getLastName(),
                memberDetails.get(i).getEmailId()};

            tableModel.addRow(row);
        }
        displayMembersTable.setBounds(200, 200, 500, 500);
    }//GEN-LAST:event_bViewAllMembersActionPerformed

    private void bViewAllTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewAllTeamsActionPerformed
        teamDetails = controller.retrieveAllTeams();
        
        String[] columns = {"Team Name", "Team Username"};
        DefaultTableModel tableModel = new DefaultTableModel();
        displayTeamsTable.setModel(tableModel);

        tableModel.setColumnIdentifiers(columns);
        for (int i = 0; i < teamDetails.size(); i++) {
            Object[] row = {teamDetails.get(i).getTeamName(),
                teamDetails.get(i).getTeamUsername()};
            tableModel.addRow(row);
        }
        displayTeamsTable.setBounds(200, 200, 500, 500);
    }//GEN-LAST:event_bViewAllTeamsActionPerformed

    private void bCreateLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateLoginActionPerformed
        String[] array = new String[4];
        if (tfTeamName.getText().equals("") || tfTeamPassword.getText().equals("") || tfTeamUsername.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Fields cannot be left blank");
        } else {

            array[0] = tfTeamName.getText();
            array[1] = tfTeamPassword.getText();
            array[2] = tfTeamUsername.getText();
            array[3] = cbRole.getSelectedItem().toString();
            boolean duplicateTeam = controller.addTeam(array);
            if(duplicateTeam == false)
                JOptionPane.showMessageDialog(null, "Username already taken. Choose another Username");
            else{
            JOptionPane.showMessageDialog(null, "Team " + array[0] + " created");
            tfTeamName.setText(null);
            tfTeamUsername.setText(null);
            tfTeamPassword.setText(null);
            bCreateLogin.setEnabled(false);
            }
        }
    }//GEN-LAST:event_bCreateLoginActionPerformed

    private void cbLoginRoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbLoginRoleItemStateChanged
        if (cbLoginRole.getSelectedItem().equals("Admin")) {
            lTeamName.setVisible(false);
            tfTeamName.setVisible(false);
        } else {
            lTeamName.setVisible(true);
            tfTeamName.setVisible(true);
        }
    }//GEN-LAST:event_cbLoginRoleItemStateChanged

    private void bClearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearFieldsActionPerformed
        new AdminGUI();
    }//GEN-LAST:event_bClearFieldsActionPerformed

    private void bAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMemberActionPerformed
        String[] memberInput = new String[5];

        if (tfMemberFirstName.getText().equals("") || tfMemberLastName.getText().equals("") || tfMemberEmail.getText().equals("") || tfPhoneNumber.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Fields marked with * cannot be left empty");
        } else {
            try {
                InternetAddress emailAddr = new InternetAddress(tfMemberEmail.getText());
                emailAddr.validate();
                memberInput[0] = tfMemberEmail.getText();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Email formatting incorrect");
                return;
            }

            memberInput[1] = tfMemberFirstName.getText();
            memberInput[2] = tfMemberLastName.getText();

            Pattern pattern = Pattern.compile(expression);
            Matcher matcher = pattern.matcher(tfPhoneNumber.getText());
            System.out.println(matcher.matches());
            if (matcher.matches()) {
                JOptionPane.showMessageDialog(null, "Phone number should contain only numbers");
                return;
            } else {
                memberInput[3] = tfPhoneNumber.getText();
            }

            memberInput[4] = cbRole.getSelectedItem().toString();
            boolean success = controller.addMember(memberInput);
            if (success == true) {
                tfMemberFirstName.setText(null);

                tfMemberLastName.setText(null);
                tfMemberEmail.setText(null);
                tfPhoneNumber.setText(null);
                JOptionPane.showMessageDialog(null, "Member added successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Duplicate email ID entry");
            }

        }

    }//GEN-LAST:event_bAddMemberActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        if (cbQueryType.getSelectedItem().equals("Team Member's Name"))
        if(displayQueryTable.getSelectedRow()==-1){
                JOptionPane.showMessageDialog(null, "Select a row from the table");
                return;
        }
        else{
                String memberEmail = displayQueryTable.getValueAt(displayQueryTable.getSelectedRow(), 2).toString();
                controller.deleteMember(memberEmail);
                memberDetails = controller.retrieveAllMembers();
                String[] columns = {"First Name", "Last Name", "Email ID"};
                DefaultTableModel tableModel = new DefaultTableModel();
                displayQueryTable.setModel(tableModel);

                tableModel.setColumnIdentifiers(columns);
                for (int i = 0; i < memberDetails.size(); i++) {
                    Object[] row = {memberDetails.get(i).getFirstName(),
                    memberDetails.get(i).getLastName(),
                    memberDetails.get(i).getEmailId()};

                tableModel.addRow(row);
                }
            displayQueryTable.setBounds(200, 200, 500, 500);
        }
            
        else if (cbQueryType.getSelectedItem().equals("Project Name")) {
                if(displayQueryTable.getSelectedRow()==-1)
                    JOptionPane.showMessageDialog(null, "Select a row from the table");
                else{
                    ProjectDetailsTable projectSelected = projectDetails.get(displayQueryTable.getSelectedRow());
                    controller.deleteProject(projectSelected);
                    projectDetails = controller.retrieveAllProjects();
                    String[] columns = {"Project Name", "Start Date", "End Date", "Status"};
                    DefaultTableModel tableModel = new DefaultTableModel();
                    displayQueryTable.setModel(tableModel);

                    tableModel.setColumnIdentifiers(columns);
                    for (int i = 0; i < projectDetails.size(); i++) {
                        Object[] row = {projectDetails.get(i).getProjectName(),
                            projectDetails.get(i).getProjectStartDate(),
                            projectDetails.get(i).getProjectEndDate(),
                            projectDetails.get(i).getProjectStatus()};

                        tableModel.addRow(row);
                    }
                    displayQueryTable.setBounds(200, 200, 500, 500);
                }
            }
                    
    }//GEN-LAST:event_bDeleteActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddMember;
    private javax.swing.JButton bAddMemberToTeam;
    private javax.swing.JButton bClearFields;
    private javax.swing.JButton bCreateLogin;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bViewAllMembers;
    private javax.swing.JButton bViewAllTeams;
    private javax.swing.JButton bViewDetails;
    private javax.swing.JComboBox cbLoginRole;
    private javax.swing.JComboBox cbQueryType;
    private javax.swing.JComboBox cbRole;
    private javax.swing.JTable displayMembersTable;
    private javax.swing.JTable displayQueryTable;
    private javax.swing.JTable displayTeamsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lAdminBanner;
    private javax.swing.JLabel lMemberEmail;
    private javax.swing.JLabel lMemberFirstName;
    private javax.swing.JLabel lMemberLastName;
    private javax.swing.JLabel lPhoneNumber;
    private javax.swing.JLabel lQueryType;
    private javax.swing.JLabel lRole;
    private javax.swing.JLabel lTeamName;
    private javax.swing.JPanel pAdminBanner;
    private javax.swing.JPanel pCreateMembers;
    private javax.swing.JPanel pCreateTeam;
    private javax.swing.JPanel pDetails;
    private javax.swing.JPanel pProjectMembersList;
    private javax.swing.JPanel pQuery;
    private javax.swing.JTextField tfMemberEmail;
    private javax.swing.JTextField tfMemberFirstName;
    private javax.swing.JTextField tfMemberLastName;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JTextField tfTeamName;
    private javax.swing.JTextField tfTeamPassword;
    private javax.swing.JTextField tfTeamUsername;
    // End of variables declaration//GEN-END:variables
}
